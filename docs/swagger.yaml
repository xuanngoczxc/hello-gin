basePath: /api
definitions:
  models.Attendance:
    properties:
      checked_in_at:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      phone:
        type: string
      session:
        allOf:
        - $ref: '#/definitions/models.AttendanceSession'
        description: Relationships
      session_id:
        type: integer
      student_name:
        type: string
      updated_at:
        type: string
      work_unit:
        type: string
      work_unit_address:
        type: string
    type: object
  models.AttendanceSession:
    properties:
      attendances:
        items:
          $ref: '#/definitions/models.Attendance'
        type: array
      class:
        $ref: '#/definitions/models.Class'
      class_id:
        type: integer
      created_at:
        type: string
      event:
        allOf:
        - $ref: '#/definitions/models.Event'
        description: Relationships
      event_id:
        type: integer
      id:
        type: integer
      session_date:
        type: string
      teacher:
        $ref: '#/definitions/models.Teacher'
      teacher_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.Class:
    properties:
      class_code:
        type: string
      class_name:
        type: string
      created_at:
        type: string
      id:
        type: integer
      sessions:
        items:
          $ref: '#/definitions/models.AttendanceSession'
        type: array
      students:
        description: Relationships
        items:
          $ref: '#/definitions/models.Student'
        type: array
      updated_at:
        type: string
    type: object
  models.CreateAttendanceRequest:
    properties:
      email:
        example: student@example.com
        type: string
      phone:
        example: "0123456789"
        type: string
      session_id:
        example: 1
        type: integer
      student_name:
        example: Nguyen Van A
        type: string
      work_unit:
        example: Công ty ABC
        type: string
      work_unit_address:
        example: 123 Đường ABC, Quận 1, TP.HCM
        type: string
    required:
    - email
    - phone
    - session_id
    - student_name
    - work_unit
    - work_unit_address
    type: object
  models.CreateAttendanceSessionRequest:
    properties:
      class_id:
        example: 1
        type: integer
      event_id:
        example: 1
        type: integer
      session_date:
        example: "2025-08-20T08:31:46.121Z"
        type: string
      teacher_id:
        example: "1"
        type: string
    type: object
  models.CreateClassRequest:
    properties:
      class_code:
        example: LOP001
        type: string
      class_name:
        example: Lớp Khoa học máy tính K65
        type: string
    required:
    - class_code
    - class_name
    type: object
  models.CreateEventRequest:
    properties:
      description:
        example: Workshop về trí tuệ nhân tạo
        type: string
      event_name:
        example: Workshop AI
        type: string
      start_date:
        example: "2023-01-01T00:00:00Z"
        type: string
    type: object
  models.CreateStudentRequest:
    properties:
      class_id:
        example: 1
        type: integer
      date_of_birth:
        example: "2000-01-01T00:00:00Z"
        type: string
      email:
        example: user@example.com
        type: string
      phone:
        example: "0123456789"
        type: string
      student_code:
        example: SV001
        type: string
      student_name:
        example: Nguyen Van A
        type: string
      work_unit:
        example: Công ty ABC
        type: string
    type: object
  models.CreateTeacherRequest:
    properties:
      date_of_birth:
        example: "1980-01-01T00:00:00Z"
        type: string
      email:
        example: teacher@example.com
        type: string
      phone:
        example: "0123456789"
        type: string
      teacher_code:
        example: GV001
        type: string
      teacher_name:
        example: Nguyen Thi B
        type: string
      work_unit:
        example: Trường Đại học ABC
        type: string
    type: object
  models.Event:
    properties:
      created_at:
        type: string
      description:
        type: string
      event_name:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      sessions:
        items:
          $ref: '#/definitions/models.AttendanceSession'
        type: array
      start_date:
        type: string
      updated_at:
        type: string
    type: object
  models.Student:
    properties:
      class:
        allOf:
        - $ref: '#/definitions/models.Class'
        description: Relationships
      class_id:
        type: integer
      created_at:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      id:
        type: integer
      phone:
        type: string
      student_code:
        type: string
      student_name:
        type: string
      updated_at:
        type: string
      work_unit:
        type: string
    type: object
  models.Teacher:
    properties:
      created_at:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      id:
        type: integer
      phone:
        type: string
      sessions:
        description: Relationships
        items:
          $ref: '#/definitions/models.AttendanceSession'
        type: array
      teacher_code:
        type: string
      teacher_name:
        type: string
      updated_at:
        type: string
      work_unit:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a simple student management server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Student Management API
  version: "1.0"
paths:
  /attendance-sessions:
    get:
      description: Get all attendance sessions with class and teacher information
      parameters:
      - description: Filter by Event ID
        in: query
        name: event_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AttendanceSession'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all attendance sessions
      tags:
      - attendance-sessions
    post:
      consumes:
      - application/json
      description: Create a new attendance session in the database
      parameters:
      - description: Attendance session data
        in: body
        name: session
        required: true
        schema:
          $ref: '#/definitions/models.CreateAttendanceSessionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AttendanceSession'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new attendance session
      tags:
      - attendance-sessions
  /attendance-sessions/{id}:
    get:
      description: Get a specific attendance session with class, teacher, and attendances
      parameters:
      - description: Attendance Session ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AttendanceSession'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get attendance session by ID
      tags:
      - attendance-sessions
  /attendances:
    get:
      description: Get all attendance records with session information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Attendance'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all attendances
      tags:
      - attendances
    post:
      consumes:
      - application/json
      description: Create a new attendance record
      parameters:
      - description: Attendance data
        in: body
        name: attendance
        required: true
        schema:
          $ref: '#/definitions/models.CreateAttendanceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Attendance'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new attendance
      tags:
      - attendances
  /attendances/{id}:
    get:
      description: Get a specific attendance record with session information
      parameters:
      - description: Attendance ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Attendance'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get attendance by ID
      tags:
      - attendances
  /classes:
    get:
      description: Get all classes from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Class'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all classes
      tags:
      - classes
    post:
      consumes:
      - application/json
      description: Create a new class in the database
      parameters:
      - description: Class data
        in: body
        name: class
        required: true
        schema:
          $ref: '#/definitions/models.CreateClassRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Class'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new class
      tags:
      - classes
  /classes/{id}:
    get:
      description: Get a specific class with its students
      parameters:
      - description: Class ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Class'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get class by ID
      tags:
      - classes
  /events:
    get:
      consumes:
      - application/json
      description: Get a list of all events
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Get all events
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Create a new event with the provided information
      parameters:
      - description: Event data
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/models.CreateEventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new event
      tags:
      - events
  /events/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an event by its ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Delete an event
      tags:
      - events
    get:
      consumes:
      - application/json
      description: Get a single event by its ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "404":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Get event by ID
      tags:
      - events
    put:
      consumes:
      - application/json
      description: Update an existing event with the provided information
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Event data
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/models.CreateEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "404":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Update an event
      tags:
      - events
  /events/{id}/active:
    put:
      consumes:
      - application/json
      description: Set the active status of an event by its ID (1 = active, 0 = inactive)
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Active status (1 = active, 0 = inactive)
        in: body
        name: active
        required: true
        schema:
          properties:
            active:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "404":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Set event active status
      tags:
      - events
  /events/{id}/attendances:
    get:
      responses: {}
  /events/{id}/sessions:
    get:
      consumes:
      - application/json
      description: Get a single event by its ID including all attendance sessions
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "404":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Get event with sessions
      tags:
      - events
  /events/active:
    get:
      consumes:
      - application/json
      description: Get a list of all active events
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Get all active events
      tags:
      - events
  /health:
    get:
      consumes:
      - application/json
      description: Check if the application and database are running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Health check
      tags:
      - health
  /sessions/{sessionId}/attendances:
    get:
      description: Get all attendance records for a specific session
      parameters:
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Attendance'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get attendances by session ID
      tags:
      - attendances
  /students:
    get:
      consumes:
      - application/json
      description: Get a list of all students
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Student'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all students
      tags:
      - students
    post:
      consumes:
      - application/json
      description: Create a new student in the database
      parameters:
      - description: Student data
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.CreateStudentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new student
      tags:
      - students
  /teachers:
    get:
      description: Get all teachers from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Teacher'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all teachers
      tags:
      - teachers
    post:
      consumes:
      - application/json
      description: Create a new teacher in the database
      parameters:
      - description: Teacher data
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/models.CreateTeacherRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Teacher'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new teacher
      tags:
      - teachers
  /teachers/{id}:
    get:
      description: Get a specific teacher by ID
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Teacher'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get teacher by ID
      tags:
      - teachers
swagger: "2.0"
